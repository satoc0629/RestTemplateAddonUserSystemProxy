/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package RestTemplateAddonUserSystemProxy;

import java.lang.instrument.ClassFileTransformer;
import java.lang.instrument.IllegalClassFormatException;
import java.lang.instrument.Instrumentation;
import java.net.Authenticator;
import java.net.PasswordAuthentication;
import java.security.ProtectionDomain;

public class RestTemplateRewrite {
    public static void premain(String agentArgs, Instrumentation instrumentation) {
        System.err.println("Authenticator.setDefault");
        instrumentation.addTransformer(new ClassFileTransformer() {
            @Override
            public byte[] transform(ClassLoader loader, String className, Class<?> classBeingRedefined, ProtectionDomain protectionDomain, byte[] classfileBuffer) throws IllegalClassFormatException {
                return null;
            }

            @Override
            public byte[] transform(Module module, ClassLoader loader, String className, Class<?>
                    classBeingRedefined, ProtectionDomain protectionDomain, byte[] classfileBuffer) throws
                    IllegalClassFormatException {
                String user = System.getProperty("http.proxyUser");
                String password = System.getProperty("http.proxyPassword");

                if (user != null && password != null) {
                    Authenticator.setDefault(new Authenticator() {
                        protected PasswordAuthentication getPasswordAuthentication() {
                            return new PasswordAuthentication(user,
                                    password.toCharArray());
                        }
                    });
                }
                return null;
            }
        });
    }
}
